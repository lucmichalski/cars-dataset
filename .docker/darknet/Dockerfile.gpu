# Build phase
FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04 as builder

# ENV darknet_commit=a234a5022333c930de08f2470184ef4e0c68356e

WORKDIR /root/build
COPY Makefile.gpu .
RUN apt-get -y update && \
	apt-get -y install git build-essential && \
	git clone https://github.com/AlexeyAB/darknet.git && \
	cd darknet && \
        # git checkout $darknet_commit && \
        cp -f /root/build/Makefile.gpu Makefile && \
	make

# Final Image
# FROM nvcr.io/nvidia/cuda:10.2-runtime
# FROM nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04
FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

WORKDIR /root
COPY --from=builder /root/build/darknet/darknet \
	/root/build/darknet/libdarknet.so \
	/root/build/darknet/include/darknet.h \
	./staging/

RUN mv staging/darknet /usr/local/bin && \
	mv staging/darknet.h /usr/local/include && \
	mv staging/libdarknet.so /usr/local/lib && \
	rm -rf staging

WORKDIR /tmp
RUN cd /tmp \
    && apt-get -y update \
    && apt-get install -y wget git gcc \ 
    && wget https://dl.google.com/go/go1.14.linux-amd64.tar.gz \
    && tar -xvf go1.14.linux-amd64.tar.gz \
    && mv go /usr/local

RUN cp /usr/local/cuda-10.2/compat/* /usr/local/cuda-10.2/targets/x86_64-linux/lib/

ENV GOROOT=/usr/local/go
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH
# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-10.2/targets/x86_64-linux/lib/

RUN \
    go get -u github.com/LdDl/go-darknet \
    && go get -u github.com/disintegration/imaging \
    && go get -u github.com/gin-gonic/gin \
    && go get -u github.com/llgcode/draw2d/draw2dimg \
    && go get -u github.com/k0kubun/pp \
    && go get -u github.com/cavaliercoder/grab \
    && go get -u github.com/pkg/errors \
    && go get -u github.com/h2non/filetype \
    && go get -u github.com/lucmichalski/cars-dataset/pkg/middlewares \
    && go get -u github.com/lucmichalski/cars-dataset/pkg/models \
    && go get -u github.com/lucmichalski/cars-dataset/pkg/grab \
    \
    && go get -u github.com/gin-gonic/contrib/cors \
    && go get -u github.com/jinzhu/gorm \
    && go get -u github.com/oschwald/geoip2-golang \
    && go get -u github.com/qor/media/media_library \
    && go get -u github.com/qor/validations \
    && go get -u github.com/sirupsen/logrus \
    && go get -u github.com/spf13/pflag

RUN go get -u github.com/corpix/uarand \
    && go get -u golang.org/x/net/proxy

WORKDIR /darknet

COPY download_data.sh .

CMD ["/bin/bash"]
