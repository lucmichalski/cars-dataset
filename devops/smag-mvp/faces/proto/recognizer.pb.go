// Code generated by protoc-gen-go. DO NOT EDIT.
// source: faces/proto/recognizer.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecognizeRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecognizeRequest) Reset()         { *m = RecognizeRequest{} }
func (m *RecognizeRequest) String() string { return proto.CompactTextString(m) }
func (*RecognizeRequest) ProtoMessage()    {}
func (*RecognizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_recognizer_8f953e8e318cc972, []int{0}
}
func (m *RecognizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognizeRequest.Unmarshal(m, b)
}
func (m *RecognizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognizeRequest.Marshal(b, m, deterministic)
}
func (dst *RecognizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognizeRequest.Merge(dst, src)
}
func (m *RecognizeRequest) XXX_Size() int {
	return xxx_messageInfo_RecognizeRequest.Size(m)
}
func (m *RecognizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecognizeRequest proto.InternalMessageInfo

func (m *RecognizeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Face struct {
	X                    int32     `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32     `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width                int32     `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32     `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Encoding             []float32 `protobuf:"fixed32,5,rep,packed,name=encoding,proto3" json:"encoding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Face) Reset()         { *m = Face{} }
func (m *Face) String() string { return proto.CompactTextString(m) }
func (*Face) ProtoMessage()    {}
func (*Face) Descriptor() ([]byte, []int) {
	return fileDescriptor_recognizer_8f953e8e318cc972, []int{1}
}
func (m *Face) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Face.Unmarshal(m, b)
}
func (m *Face) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Face.Marshal(b, m, deterministic)
}
func (dst *Face) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Face.Merge(dst, src)
}
func (m *Face) XXX_Size() int {
	return xxx_messageInfo_Face.Size(m)
}
func (m *Face) XXX_DiscardUnknown() {
	xxx_messageInfo_Face.DiscardUnknown(m)
}

var xxx_messageInfo_Face proto.InternalMessageInfo

func (m *Face) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Face) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Face) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Face) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Face) GetEncoding() []float32 {
	if m != nil {
		return m.Encoding
	}
	return nil
}

type RegognizeResponse struct {
	Faces                []*Face  `protobuf:"bytes,1,rep,name=faces,proto3" json:"faces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegognizeResponse) Reset()         { *m = RegognizeResponse{} }
func (m *RegognizeResponse) String() string { return proto.CompactTextString(m) }
func (*RegognizeResponse) ProtoMessage()    {}
func (*RegognizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_recognizer_8f953e8e318cc972, []int{2}
}
func (m *RegognizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegognizeResponse.Unmarshal(m, b)
}
func (m *RegognizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegognizeResponse.Marshal(b, m, deterministic)
}
func (dst *RegognizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegognizeResponse.Merge(dst, src)
}
func (m *RegognizeResponse) XXX_Size() int {
	return xxx_messageInfo_RegognizeResponse.Size(m)
}
func (m *RegognizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegognizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegognizeResponse proto.InternalMessageInfo

func (m *RegognizeResponse) GetFaces() []*Face {
	if m != nil {
		return m.Faces
	}
	return nil
}

func init() {
	proto.RegisterType((*RecognizeRequest)(nil), "proto.RecognizeRequest")
	proto.RegisterType((*Face)(nil), "proto.Face")
	proto.RegisterType((*RegognizeResponse)(nil), "proto.RegognizeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FaceRecognizerClient is the client API for FaceRecognizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaceRecognizerClient interface {
	RecognizeFaces(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RegognizeResponse, error)
}

type faceRecognizerClient struct {
	cc *grpc.ClientConn
}

func NewFaceRecognizerClient(cc *grpc.ClientConn) FaceRecognizerClient {
	return &faceRecognizerClient{cc}
}

func (c *faceRecognizerClient) RecognizeFaces(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RegognizeResponse, error) {
	out := new(RegognizeResponse)
	err := c.cc.Invoke(ctx, "/proto.FaceRecognizer/RecognizeFaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaceRecognizerServer is the server API for FaceRecognizer service.
type FaceRecognizerServer interface {
	RecognizeFaces(context.Context, *RecognizeRequest) (*RegognizeResponse, error)
}

func RegisterFaceRecognizerServer(s *grpc.Server, srv FaceRecognizerServer) {
	s.RegisterService(&_FaceRecognizer_serviceDesc, srv)
}

func _FaceRecognizer_RecognizeFaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecognizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceRecognizerServer).RecognizeFaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FaceRecognizer/RecognizeFaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceRecognizerServer).RecognizeFaces(ctx, req.(*RecognizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaceRecognizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FaceRecognizer",
	HandlerType: (*FaceRecognizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecognizeFaces",
			Handler:    _FaceRecognizer_RecognizeFaces_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "faces/proto/recognizer.proto",
}

func init() {
	proto.RegisterFile("faces/proto/recognizer.proto", fileDescriptor_recognizer_8f953e8e318cc972)
}

var fileDescriptor_recognizer_8f953e8e318cc972 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x45, 0x49, 0xa7, 0x29, 0xfa, 0x2a, 0xa5, 0x3e, 0x44, 0x43, 0x71, 0x31, 0x0e, 0x2e, 0x66,
	0xd5, 0x42, 0x05, 0x7f, 0x40, 0xf0, 0x03, 0x02, 0x7e, 0x40, 0x9d, 0x3e, 0x67, 0x06, 0x4a, 0x52,
	0x93, 0x14, 0x5b, 0xbf, 0xbe, 0xe4, 0xa5, 0xcd, 0x62, 0x56, 0xc9, 0xb9, 0x87, 0x90, 0x7b, 0xe1,
	0xf9, 0x67, 0xd3, 0x90, 0x5f, 0xed, 0x9d, 0x0d, 0x76, 0xe5, 0xa8, 0xb1, 0xad, 0xe9, 0xff, 0xc9,
	0x2d, 0x39, 0x40, 0xc9, 0x47, 0xf5, 0x0a, 0x73, 0x7d, 0x55, 0x9a, 0x7e, 0x0f, 0xe4, 0x03, 0xce,
	0xa1, 0x38, 0xb8, 0x9d, 0x12, 0xa5, 0xa8, 0x6f, 0x75, 0xbc, 0x56, 0x3b, 0x18, 0x7f, 0x6e, 0x1a,
	0xc2, 0x3b, 0x10, 0x47, 0xce, 0xa5, 0x16, 0xc7, 0x48, 0x27, 0x35, 0x4a, 0x74, 0xc2, 0x07, 0x90,
	0x7f, 0xfd, 0x36, 0x74, 0xaa, 0xe0, 0x24, 0x01, 0x3e, 0xc2, 0xa4, 0xa3, 0xbe, 0xed, 0x82, 0x1a,
	0x73, 0x7c, 0x21, 0x5c, 0xc0, 0x0d, 0x99, 0xc6, 0x6e, 0x7b, 0xd3, 0x2a, 0x59, 0x16, 0xf5, 0x48,
	0x67, 0xae, 0xde, 0xe1, 0x5e, 0x53, 0x7b, 0xed, 0xe4, 0xf7, 0xd6, 0x78, 0xc2, 0x17, 0x90, 0xbc,
	0x47, 0x89, 0xb2, 0xa8, 0xa7, 0xeb, 0x69, 0x9a, 0xb1, 0x8c, 0xb5, 0x74, 0x32, 0xeb, 0x2f, 0x98,
	0x31, 0xe6, 0xa9, 0xf8, 0x01, 0xb3, 0x4c, 0x51, 0x79, 0x7c, 0xba, 0xbc, 0x1b, 0x8e, 0x5e, 0xa8,
	0x2c, 0x06, 0x3f, 0x7f, 0x4f, 0x58, 0xbc, 0x9d, 0x03, 0x00, 0x00, 0xff, 0xff, 0x22, 0xe8, 0x3b,
	0xa5, 0x50, 0x01, 0x00, 0x00,
}
