// source: usersearch.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable*/

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.proto.InstaPost", null, global);
goog.exportSymbol("proto.proto.InstaPostsResponse", null, global);
goog.exportSymbol("proto.proto.User", null, global);
goog.exportSymbol("proto.proto.UserIdRequest", null, global);
goog.exportSymbol("proto.proto.UserNameRequest", null, global);
goog.exportSymbol("proto.proto.UserSearchResponse", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.User = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.proto.User.repeatedFields_,
    null
  );
};
goog.inherits(proto.proto.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.User.displayName = "proto.proto.User";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserSearchResponse = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.proto.UserSearchResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.proto.UserSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserSearchResponse.displayName = "proto.proto.UserSearchResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserNameRequest.displayName = "proto.proto.UserNameRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UserIdRequest.displayName = "proto.proto.UserIdRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.InstaPost = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.proto.InstaPost.repeatedFields_,
    null
  );
};
goog.inherits(proto.proto.InstaPost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.InstaPost.displayName = "proto.proto.InstaPost";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.InstaPostsResponse = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.proto.InstaPostsResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.proto.InstaPostsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.InstaPostsResponse.displayName = "proto.proto.InstaPostsResponse";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.User.repeatedFields_ = [6, 7];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.User.prototype.toObject = function(opt_includeInstance) {
    return proto.proto.User.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.User} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.User.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
        realName: jspb.Message.getFieldWithDefault(msg, 3, ""),
        bio: jspb.Message.getFieldWithDefault(msg, 4, ""),
        avatarUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
        followingsList: jspb.Message.toObjectList(
          msg.getFollowingsList(),
          proto.proto.User.toObject,
          includeInstance
        ),
        followersList: jspb.Message.toObjectList(
          msg.getFollowersList(),
          proto.proto.User.toObject,
          includeInstance
        )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.User}
 */
proto.proto.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.User();
  return proto.proto.User.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.User}
 */
proto.proto.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setRealName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setBio(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAvatarUrl(value);
        break;
      case 6:
        var value = new proto.proto.User();
        reader.readMessage(value, proto.proto.User.deserializeBinaryFromReader);
        msg.addFollowings(value);
        break;
      case 7:
        var value = new proto.proto.User();
        reader.readMessage(value, proto.proto.User.deserializeBinaryFromReader);
        msg.addFollowers(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getRealName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getFollowingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(6, f, proto.proto.User.serializeBinaryToWriter);
  }
  f = message.getFollowersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(7, f, proto.proto.User.serializeBinaryToWriter);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.proto.User.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string real_name = 3;
 * @return {string}
 */
proto.proto.User.prototype.getRealName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setRealName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string bio = 4;
 * @return {string}
 */
proto.proto.User.prototype.getBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setBio = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string avatar_url = 5;
 * @return {string}
 */
proto.proto.User.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * repeated User followings = 6;
 * @return {!Array<!proto.proto.User>}
 */
proto.proto.User.prototype.getFollowingsList = function() {
  return /** @type{!Array<!proto.proto.User>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.proto.User,
    6
  ));
};

/**
 * @param {!Array<!proto.proto.User>} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setFollowingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};

/**
 * @param {!proto.proto.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.User}
 */
proto.proto.User.prototype.addFollowings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    6,
    opt_value,
    proto.proto.User,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.clearFollowingsList = function() {
  return this.setFollowingsList([]);
};

/**
 * repeated User followers = 7;
 * @return {!Array<!proto.proto.User>}
 */
proto.proto.User.prototype.getFollowersList = function() {
  return /** @type{!Array<!proto.proto.User>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.proto.User,
    7
  ));
};

/**
 * @param {!Array<!proto.proto.User>} value
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.setFollowersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};

/**
 * @param {!proto.proto.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.User}
 */
proto.proto.User.prototype.addFollowers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    7,
    opt_value,
    proto.proto.User,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.User} returns this
 */
proto.proto.User.prototype.clearFollowersList = function() {
  return this.setFollowersList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UserSearchResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.UserSearchResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.proto.UserSearchResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.UserSearchResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.UserSearchResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        userListList: jspb.Message.toObjectList(
          msg.getUserListList(),
          proto.proto.User.toObject,
          includeInstance
        )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserSearchResponse}
 */
proto.proto.UserSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserSearchResponse();
  return proto.proto.UserSearchResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserSearchResponse}
 */
proto.proto.UserSearchResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.proto.User();
        reader.readMessage(value, proto.proto.User.deserializeBinaryFromReader);
        msg.addUserList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSearchResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getUserListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.proto.User.serializeBinaryToWriter);
  }
};

/**
 * repeated User user_list = 1;
 * @return {!Array<!proto.proto.User>}
 */
proto.proto.UserSearchResponse.prototype.getUserListList = function() {
  return /** @type{!Array<!proto.proto.User>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.proto.User,
    1
  ));
};

/**
 * @param {!Array<!proto.proto.User>} value
 * @return {!proto.proto.UserSearchResponse} returns this
 */
proto.proto.UserSearchResponse.prototype.setUserListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.proto.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.User}
 */
proto.proto.UserSearchResponse.prototype.addUserList = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.proto.User,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UserSearchResponse} returns this
 */
proto.proto.UserSearchResponse.prototype.clearUserListList = function() {
  return this.setUserListList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.UserNameRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.proto.UserNameRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.UserNameRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.UserNameRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        userName: jspb.Message.getFieldWithDefault(msg, 1, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserNameRequest}
 */
proto.proto.UserNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserNameRequest();
  return proto.proto.UserNameRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserNameRequest}
 */
proto.proto.UserNameRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserNameRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.proto.UserNameRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.UserNameRequest} returns this
 */
proto.proto.UserNameRequest.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.UserIdRequest.prototype.toObject = function(opt_includeInstance) {
    return proto.proto.UserIdRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.UserIdRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.UserIdRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserIdRequest}
 */
proto.proto.UserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserIdRequest();
  return proto.proto.UserIdRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserIdRequest}
 */
proto.proto.UserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.proto.UserIdRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.UserIdRequest} returns this
 */
proto.proto.UserIdRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.InstaPost.repeatedFields_ = [5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.InstaPost.prototype.toObject = function(opt_includeInstance) {
    return proto.proto.InstaPost.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.InstaPost} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.InstaPost.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ""),
        postId: jspb.Message.getFieldWithDefault(msg, 2, ""),
        imgUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
        caption: jspb.Message.getFieldWithDefault(msg, 4, ""),
        taggedUsersList: jspb.Message.toObjectList(
          msg.getTaggedUsersList(),
          proto.proto.User.toObject,
          includeInstance
        ),
        shortCode: jspb.Message.getFieldWithDefault(msg, 6, "")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.InstaPost}
 */
proto.proto.InstaPost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.InstaPost();
  return proto.proto.InstaPost.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.InstaPost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.InstaPost}
 */
proto.proto.InstaPost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPostId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setImgUrl(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setCaption(value);
        break;
      case 5:
        var value = new proto.proto.User();
        reader.readMessage(value, proto.proto.User.deserializeBinaryFromReader);
        msg.addTaggedUsers(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setShortCode(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.InstaPost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.InstaPost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.InstaPost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.InstaPost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPostId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getTaggedUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(5, f, proto.proto.User.serializeBinaryToWriter);
  }
  f = message.getShortCode();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.InstaPost.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string post_id = 2;
 * @return {string}
 */
proto.proto.InstaPost.prototype.getPostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setPostId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string img_url = 3;
 * @return {string}
 */
proto.proto.InstaPost.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string caption = 4;
 * @return {string}
 */
proto.proto.InstaPost.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * repeated User tagged_users = 5;
 * @return {!Array<!proto.proto.User>}
 */
proto.proto.InstaPost.prototype.getTaggedUsersList = function() {
  return /** @type{!Array<!proto.proto.User>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.proto.User,
    5
  ));
};

/**
 * @param {!Array<!proto.proto.User>} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setTaggedUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};

/**
 * @param {!proto.proto.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.User}
 */
proto.proto.InstaPost.prototype.addTaggedUsers = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.proto.User,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.clearTaggedUsersList = function() {
  return this.setTaggedUsersList([]);
};

/**
 * optional string short_code = 6;
 * @return {string}
 */
proto.proto.InstaPost.prototype.getShortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPost} returns this
 */
proto.proto.InstaPost.prototype.setShortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.InstaPostsResponse.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.proto.InstaPostsResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.proto.InstaPostsResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.proto.InstaPostsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.proto.InstaPostsResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        instaPostsList: jspb.Message.toObjectList(
          msg.getInstaPostsList(),
          proto.proto.InstaPost.toObject,
          includeInstance
        )
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.InstaPostsResponse}
 */
proto.proto.InstaPostsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.InstaPostsResponse();
  return proto.proto.InstaPostsResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.InstaPostsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.InstaPostsResponse}
 */
proto.proto.InstaPostsResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = new proto.proto.InstaPost();
        reader.readMessage(
          value,
          proto.proto.InstaPost.deserializeBinaryFromReader
        );
        msg.addInstaPosts(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.InstaPostsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.InstaPostsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.InstaPostsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.InstaPostsResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getInstaPostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.InstaPost.serializeBinaryToWriter
    );
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.proto.InstaPostsResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.proto.InstaPostsResponse} returns this
 */
proto.proto.InstaPostsResponse.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated InstaPost insta_posts = 2;
 * @return {!Array<!proto.proto.InstaPost>}
 */
proto.proto.InstaPostsResponse.prototype.getInstaPostsList = function() {
  return /** @type{!Array<!proto.proto.InstaPost>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.proto.InstaPost,
    2
  ));
};

/**
 * @param {!Array<!proto.proto.InstaPost>} value
 * @return {!proto.proto.InstaPostsResponse} returns this
 */
proto.proto.InstaPostsResponse.prototype.setInstaPostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.proto.InstaPost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.InstaPost}
 */
proto.proto.InstaPostsResponse.prototype.addInstaPosts = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.proto.InstaPost,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.InstaPostsResponse} returns this
 */
proto.proto.InstaPostsResponse.prototype.clearInstaPostsList = function() {
  return this.setInstaPostsList([]);
};

goog.object.extend(exports, proto.proto);
