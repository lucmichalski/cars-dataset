## github issue
------------------------------------------------------------------------------------------------------
Hi,

Hope you are all well !

[text]

Thanks in advance for any insights or inputs on that topic.

Cheers,
X

## grpc
https://github.com/jemgunay/grpc-examples/blob/master/client/main.go
https://github.com/jecklgamis/grpc-go-example/blob/master/cmd/client/client.go
https://github.com/coreydaley/crawler
https://github.com/jjmengze/traffic-bot/blob/104f1d58d8ccb121bc60a8a07cae64b589753e00/pkg/apis/tra/v1alpha1/train.go
https://github.com/sfproductlabs/scrp
https://github.com/kpolley/RELK


MaxX
615,392,16,212

original: http://51.91.21.67:9008/system/vehicle_images/1665021/file.jpg
bbox: http://51.91.21.67:9006/bbox?url=http://51.91.21.67:9008/system/vehicle_images/1665021/file.jpg

taille original: 640x480
taille reduit: 200x150

maxX = 615
maxY = 392
minX = 16
minY = 212

## Plugins

https://www.motorbike-online.com/listings/1966-lambretta-sx-200/

https://www.classic-trader.com/
https://cdn.classic-trader.com/I/sitemap/sitemap.xml
https://www.classic-trader.com/uk/cars/listing/porsche/911/911-carrera-s/1997/186152

.data-list .data-item
.label
.value

.slides .slide-image img

https://www.classicdriver.com
https://www.classicdriver.com/en/sitemap.xml
https://www.classicdriver.com/en/bike/iso/scooter-125-cc/1953/478650

.pane-content .field-name-field-manufactured-year .field-item

------------------------------------------------------------------------------------------------------
ssh -i ~/.ssh/ovh ubuntu@51.91.21.67

# 9004
cp shared/queue/cars.com_sitemap.txt.4 shared/queue/cars.com_sitemap.txt
go run main.go --plugins cars.com --extract --no-cache --clean --verbose

## starting bots
go run main.go --plugins thecarconnection.com --extract --no-cache --clean --verbose
go run main.go --plugins motorcycles.autotrader.com.v2 --extract --no-cache --clean --verbose


$("p[data-heading=File]")

## comprehensive cars
http://mmlab.ie.cuhk.edu.hk/datasets/comp_cars/instruction.txt
pass: d89551fd190e38
missing year attribute :-()

## download/upload to/from grdive
https://github.com/odeke-em/drive#listing

### darknet7
docker run --name darknet7 --runtime=nvidia -d -p 9008:9008 -e DARKNET_PORT=9008 -v /home/ubuntu/cars-dataset/darknet:/darknet -v /home/ubuntu/cars-dataset/models:/darknet/models lucmichalski/darknet:gpu-latest sh -c go run server.go --config-file=./models/stanford-1class.cfg --weights-file=./models/stanford-1class_final.weights --gpus 1

### darknet6
docker run --name darknet6 --runtime=nvidia -d -p 9007:9007 -e DARKNET_PORT=9007 -v /home/ubuntu/cars-dataset/darknet:/darknet -v /home/ubuntu/cars-dataset/models:/darknet/models lucmichalski/darknet:gpu-latest sh -c go run server.go --config-file=./models/stanford-1class.cfg --weights-file=./models/stanford-1class_final.weights

------------------------------------------------------------------------------------------------------
## download from gdrive

https://medium.com/@acpanjan/download-google-drive-files-using-wget-3c2c025a8b99

wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=FILEID' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=FILEID" -O FILENAME && rm -rf /tmp/cookies.txt

-- or ----------------------------------------------------------------------------------------------------

!sudo wget -O /usr/sbin/gdrivedl 'https://f.mjh.nz/gdrivedl'
!sudo chmod +x /usr/sbin/gdrivedl
!gdrivedl https://drive.google.com/open?id=1GL0zdThuAECX6zo1rA_ExKha1CPu1h_h camembert_sentiment.tar.xz
!tar xf camembert_sentiment.tar.xz

------------------------------------------------------------------------------------------------------
## upload to gdrive


??????

go run main.go --plugins carsdirect.com --no-cache --clean --verbose

------------------------------------------------------------------------------------------------------
car (0): 98.1139% | start point: (159,103) | end point: (553, 489)

sudo fuser 8882/tcp

for i in *.jpg; do rm "$i"; done

------------------------------------------------------------------------------------------------------
## darknet-train

docker run -ti --runtime=nvidia --gpus all --rm -v `pwd`/tools:/opt/tools -v `pwd`/shared/datasets:/opt/data -v `pwd`/models:/opt/models lucmichalski/darknet-train:latest

------------------------------------------------------------------------------------------------------
## fix autoscout24.fr/be mistakes
update vehicles set class='motorcycle' where modl='' and source='autoscout24.be'

------------------------------------------------------------------------------------------------------
## car datasets
https://ai.stanford.edu/~jkrause/cars/car_dataset.html
http://mmlab.ie.cuhk.edu.hk/datasets/comp_cars/
http://vmmrdb.cecsresearch.org/
http://mmlab.ie.cuhk.edu.hk/datasets/comp_cars/instruction.txt

------------------------------------------------------------------------------------------------------
nvidia-docker run nvcr.io/nvidia/cuda:10.2-runtime

curl -Lo /usr/local/bin/crane "https://www.crane-orchestration.com/downloads/mac/v3.5.0?key=e84d0987-33d0-4144-9a7b-94f3a203093e"
chmod +x /usr/local/bin/crane

go run main.go --plugins autoscout24.fr --extract --no-cache --clean --verbose

wget -nc --output-document=./models/yolov3.cfg https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov3.cfg
wget -nc --output-document=./models/yolov3.weights https://pjreddie.com/media/files/yolov3.weights

docker build -t lucmichalski/darknet:gpu-latest -f Dockerfile.gpu .

# daenon
docker run --name darknet2 --runtime=nvidia -d -p 9004:9004 -e DARKNET_PORT=9004 \
-v `pwd`/darknet:/darknet -v `pwd`/models:/darknet/models lucmichalski/darknet:gpu-latest \
sh -c 'go run server.go --config-file=./models/yolov4.cfg --weights-file=./models/yolov4.weights'

docker run --name darknet5 --runtime=nvidia -ti -p 9006:9006 -e DARKNET_PORT=9006 \
-v `pwd`/darknet:/darknet -v `pwd`/models:/darknet/models lucmichalski/darknet:gpu-latest \
sh -c 'go run server.go --config-file=./models/stanford-1class.cfg --weights-file=./models/stanford-1class_final.weights --gpu 1'

# interactive
docker stop darknet; docker rm darknet && \
docker run --name darknet --runtime=nvidia -ti -p 9003:9003 -e DARKNET_PORT=9003 \
-v `pwd`/shared/geoip2/GeoLite2-City.mmdb:/darknet/geoip2/GeoLite2-City.mmdb -v `pwd`/darknet:/darknet -v `pwd`/models:/darknet/models lucmichalski/darknet:gpu-latest \
sh -c 'go run server.go --config-file=./models/yolov4.cfg --weights-file=./models/yolov4.weights'



https://drive.google.com/open?id=1cewMfusmPjYWbrnuJRuKhPMwRe_b9PaT

https://shorturl.at/dyBTX

"source_url" | "filepath" | "x_top" | "y_top" | "x_bottom" | "y_bottom"

51.91.21.67:9008

sudo systemctl start mysql

# wordpress upload
wp media import ~/Pictures/**\/*.jpg
wp media import 'samah nurturing.mp4'
wp media import 'samah nurturing.mp4' --post_id=1968 --title="Video Samah"

# aws-cli
aws s3 cp --recursive s3://ec2-linux-nvidia-drivers/latest/ .
aws s3 cp --recursive . s3://sniperkit-cars


aws s3 cp --recursive . s3://sniperkit-cars/queue

aws s3 cp dataset-motorcycle.txt s3://sniperkit-cars/datasets/
aws s3 cp dataset-car.txt s3://sniperkit-cars/datasets/
aws s3 cp ./stanford_train_bbfixed.tar.gz s3://sniperkit-cars/datasets/

aws s3 cp --recursive . s3://eedama/videos/

# gin + geoip
https://github.com/convox/geoip/blob/master/geoip.go
https://github.com/solefaucet/sole-server/tree/master/middlewares
https://github.com/solefaucet/sole-server/blob/master/middlewares/logger.go#L16 (geoip + logger + gin)
https://github.com/x0rzkov/geoip2-rest-api-golang/blob/master/main.go#L9-L13
https://github.com/x0rzkov/gin-gonic-realip/blob/master/realip.go
https://github.com/solefaucet/sole-server/blob/master/main.go#L50

create a middleware to log geoip data


# eedama video
https://eedama.s3.eu-west-2.amazonaws.com/videos/samah-nurturing.mp4

# copy n files
find . -maxdepth 1 -type f | head -1000 | xargs cp -t "$destdir"

# Yolov3 retrain
https://pjreddie.com/darknet/yolo/
https://github.com/GabrielDeml/Yolo_mark_in_docker
https://github.com/MrZander/YoloMarkNet
https://github.com/drainingsun/ybat
https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects
https://github.com/x0rzkov/Yolo_mark

# backhground mattting
https://colab.research.google.com/gist/andreyryabtsev/243aa3eefa6e06891dda7b1583d1d08f/backmatting.ipynb
https://gist.github.com/x0rzkov/5a4ce292a35198a5db994dc7ec5efd32

## stanford cars
https://gist.github.com/beeva-albertorincon/c2d9f7cc7a51a2d6506812d6f96a14ca
https://github.com/tleyden/StanfordCars/blob/master/StanfordCars.ipynb
https://stackoverflow.com/questions/874461/read-mat-files-in-python
https://gist.github.com/val314159/bc616c64fc7590b425bd1f08f5c5f340
https://github.com/apoorvavinod/YOLO_object_detection
https://github.com/abhijithvnair94/Automated-car-surveillance-system
https://github.com/abhijithvnair94/Category-Extraction-from-COCO
https://github.com/Oskop/YoCol (color detection+make+model)
https://github.com/tesaho/vehicle_tracking
https://github.com/bpinaya/DetectNetCars
https://github.com/StevieG47/Object-Detection-Classification
https://medium.com/@manivannan_data/yolo-annotation-tool-new-18c7847a2186
https://github.com/ManivannanMurugavel/Yolo-Annotation-Tool-New-

## tiny yolo
https://github.com/ablacklama/Vehicle-Detection/blob/master/utils/utils.py

-rw-r--r-- 1 root root        98 Apr 27 12:09 obj.data
-rw-r--r-- 1 root root         4 Apr 27 12:10 obj.names
-rw-r--r-- 1 root root         0 Apr 27 12:09 tmp.txt
-rw-r--r-- 1 root root     12195 Apr 27 12:09 yolo-obj.cfg
-rw-r--r-- 1 root root 256015980 Apr 27 12:09 yolo-obj_1000.weights
-rw-r--r-- 1 root root 256015980 Apr 27 12:09 yolo-obj_2000.weights
-rw-r--r-- 1 root root 256015980 Apr 27 12:09 yolo-obj_final.weights
-rw-r--r-- 1 root root 256015980 Apr 27 12:09 yolo-obj_last.weights

https://www.autoscout24.fr/offres/husqvarna-svartpilen-701-essence-gris-15b0f509-d45a-4dce-bf6f-d6d72a699f57?

docker build -t stanford-map2csv .
docker run -ti -v `pwd`:/opt stanford-map2csv

# yamaha-occasion.com ! important !
update vehicles set class='motorcycle' where source='yamaha-occasion.com'
update vehicles set class='car' where source='autosphere.fr'

# test tf gpu
import tensorflow as tf
tf.test.is_gpu_available()

# mailwizz
https://www.mailwizz.com/frontend/files/Mailwizz-Customer-Manual.pdf
https://www.youtube.com/watch?v=gol9NaRWqSs

docker rmi $(docker images -f "dangling=true" -q)

## launchers
docker-compose up crawler-mtbauto
docker-compose up crawler-clauto
docker-compose stop crawler-mtbauto
docker-compose stop crawler-clauto

docker-compose build crawler-mtbauto

docker-compose scale crawler-mtbauto=5
docker-compose scale crawler-clauto=5

-rw-r--r-- 1 root   root   2143946486 Apr 25 17:50 car.tar.gz
-rw-r--r-- 1 root   root           98 Apr 27 08:43 cars.data
-rw-r--r-- 1 root   root            4 Apr 27 08:44 cars.names
-rw-r--r-- 1 root   root    688950217 Apr 27 08:25 cars_train.tar.gz
-rw-r--r-- 1 root   root    688913295 Apr 27 15:30 data.tar.gz
drwxr-xr-x 2 ubuntu ubuntu     397312 Apr 25 17:39 motorcycle
drwxr-xr-x 2 ubuntu ubuntu    4501504 Apr 25 17:05 person
-rw-r--r-- 1 root   root    980878838 Apr 26 10:19 stanford.tar.gz
-rw-r--r-- 1 root   root        85530 Apr 27 15:34 train.txt
drwxr-xr-x 2 ubuntu ubuntu     684032 Apr 25 17:35 truck
drwxr-xr-x 2 root   root         4096 Apr 27 06:48 yolo-cars-opencv
-rw-r--r-- 1 root   root        12195 Apr 27 15:35 yolo-obj.cfg
-rw-r--r-- 1 root   root    170038676 Apr 27 15:35 yolov4.conv.137

# devops

## articles
https://towardsdatascience.com/get-system-metrics-for-5-min-with-docker-telegraf-influxdb-and-grafana-97cfd957f0ac

## links
https://github.com/nicolargo/docker-influxdb-grafana
https://github.com/kbastani/spark-neo4j
https://github.com/Kartonatic/tfm
https://github.com/blacktop/docker-elasticsearch-alpine
https://github.com/kbastani/spark-neo4j
https://github.com/pires/go-proxyproto
https://github.com/xeraa/elastic-docker
https://github.com/Cyb3rWard0g/HELK

## stack
https://github.com/NuroDev/jarvis

## traefik
https://github.com/pomazanbohdan/EFK-traefik-portainer
https://github.com/Cyb3rWard0g/docker-caldera
https://github.com/deviantony/docker-elk (clean !)
https://github.com/spujadas/elk-docker
https://github.com/htpcBeginner/docker-traefik
https://github.com/VioletVivirand/traefik-docker-demo

## elastic docker stack
https://github.com/xeraa/elastic-docker (nice !)
https://github.com/g3offrey/docker-elastic-monitoring/blob/master/docker-compose.yml

## elastic postresql
https://github.com/tartemov/docker-postgres-elk
	- https://github.com/tartemov/docker-postgres-elk/blob/master/docker-compose.yml

## big data elk haddop
https://github.com/kpolley/RELK (!interesting)

## docker elastic search spark
https://github.com/panggd/docker-elasticsearch
https://github.com/mydavidlew/dockers/blob/master/hadoop/docker-compose.yml

## flink example
https://github.com/alpinegizmo/flink-containers-example (nice !)
https://github.com/melentye/flink-docker (nice !)
https://github.com/jianyuanzh/flink-playground

## hadoop + hive
https://github.com/jobmthomas/Docker-Bigdata (nice !)
https://github.com/loum/hadoop-hive
https://github.com/loum/hadoop-pseudo


## zookeper + beam
https://github.com/akshatashan/dockers (nice !)
https://github.com/rejux/docker_hadoop_cluster_light

## yolo + nifi
https://community.cloudera.com/t5/Community-Articles/Integrating-Darknet-YOLOv3-Into-Apache-NiFi-Workflows/ta-p/248324
https://github.com/tspannhw/nifi-yolo3
https://community.cloudera.com/t5/Community-Articles/Integrating-Keras-TensorFlow-YOLOv3-Into-Apache-NiFi/ta-p/248418


./darknet detector map data/obj.data yolo-obj.cfg backup/yolo-obj_final.weights

../../../darknet detector map data/obj.data yolo-obj.cfg backup/yolo-obj_final.weights

find . -maxdepth 1 -type f -name *.jpg | head -2000 | xargs cp -t /home/ubuntu/cars-dataset/shared/datasets/yolo-cars/negative/

/home/ubuntu/cars-dataset/shared/datasets/stanford-cars/cars_train

# install apk to device
adb devices
adb -s a3b09a6e install  example.apk

## labelme
https://github.com/wkentaro/labelme
https://gist.github.com/x0rzkov/10e3ff0eae8d39aedbda77e175f0fb78 (Convert LabelMe Annotation Tool JSON format to YOLO text file format)
https://github.com/ivder/LabelMeYoloConverter/blob/master/convert.py (converter labelme to yolo)

## caffe
https://github.com/x0rzkov/gpu-rest-engine
https://github.com/aurotripathy/Caffe-ReST-APIs/blob/master/rest-server.py
https://github.com/Xilinx/ml-suite/blob/master/examples/caffe/REST/app.py
https://github.com/eric612/TensorRT-Yolov3-models (mobileNet-yolo
https://github.com/eric612/MobilenetV3-Caffe (mobilenetv3-caffe))
https://github.com/eric612/MobileNet-YOLO/tree/detection_with_segmentation/models/yolo_segmentation
https://github.com/jolibrain/deepdetect/tree/master/docker

000000000036.json

/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave
/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave /Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/train2017_set/000000000036.jpg
/Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/train2017_set/000000000036.json

/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave /Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/stanford_train/04810.jpg

/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave /Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/stanford_train/

/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave /Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/car/

/Applications/labelme.app/Contents/MacOS/labelme --nodata --autosave /Volumes/HardDrive/go/src/github.com/lucmichalski/cars-dataset/shared/dataset/motorbikes

## cuda + pytorch
https://discuss.pytorch.org/t/docker-torch-cuda-is-available-returns-false/47282
https://github.com/anibali/docker-pytorch/blob/master/dockerfiles/1.5.0-cuda10.2-ubuntu18.04/Dockerfile

./darknet detector test data/obj.data yolo-obj.cfg yolo-obj_2000.weights

docker-compose up crawler-mtbauto
docker-compose up crawler-clauto

docker-compose stop crawler-mtbauto
docker-compose stop crawler-clauto

docker-compose scale crawler-mtbauto=4
docker-compose scale crawler-clauto=4


find . -type f -printf '%P\n' > listing.csv

find . -type f -name "*.go" -print0 | xargs -0 sed -i 's/localhost:90046/localhost:9003/g'

find . -type f -name "*.go" -print0 | xargs -0 sed -i 's/35.179.44.166/51.91.21.67/g'

find . -type f -name "*.txt" -print0 | xargs -0 sed -i 's/%!s(int=1)/1/g'

find . -type f -name "*.json" -print0 | xargs -0 sed -i 's/person/car/g'

gdrivedl https://drive.google.com/open?id=1cewMfusmPjYWbrnuJRuKhPMwRe_b9PaT yolov4.weights

gdrivedl https://drive.google.com/open?id=1Cfnykelzf8n_Ct-8NMAkcpYgQYL6c10V val2017_coco.zip
gdrivedl drive.google.com/open?id=1PTA24UTZcsnzXPN1gmV0_lRg3lMHqwp6 

gdrivedl https://drive.google.com/open?id=1GL0zdThuAECX6zo1rA_ExKha1CPu1h_h camembert_sentiment.tar.xz

gdrivedl https://drive.google.com/open?id=1JKF-bdIklxOOVy-2Cr5qdvjgGpmGfcbp yolov4.conv.137

../../../

darknet detector map data/obj.data yolo-obj.cfg backup/


darknet detector train -dont_show -gpus 1 data/obj.data stanford-1class.cfg ../models/yolov4.conv.137

darknet detector train -dont_show -mjpeg_port 8090 -map -gpus 1 data/obj.data stanford-5class.cfg ../models/yolov4.conv.137

darknet detector train -dont_show data/obj.data yolo-obj.cfg yolov4.conv.137



docker stop darknet
docker rm darknet

docker run --name darknet --runtime=nvidia -ti -p 9003:9003 -e DARKNET_PORT=9003 \
-v `pwd`/darknet:/darknet -v `pwd`/models:/darknet/models lucmichalski/darknet:gpu-latest \
sh -c 'go run server.go --config-file=./models/yolov4.cfg --weights-file=./models/yolov4.weights'


docker build -t lucmichalski/darknet-train:latest -f Dockerfile.dev .

docker run -ti --runtime=nvidia --gpus all \
--rm -v `pwd`/tools:/opt/tools -v `pwd`/shared/datasets:/opt/data -v `pwd`/models:/opt/models \
lucmichalski/darknet-train:latest -f Dockerfile.dev .

    volumes:
    - ./tools:/opt/tools
    - ./shared/datasets:/opt/data
    - ./models:/opt/models
    command: ["/bin/bash"]

../../../darknet detector test data/obj.data yolo-obj.cfg backup/yolo-obj_2000.weights

Train on Amazon EC2, to see mAP & Loss-chart using URL like: http://ec2-35-160-228-91.us-west-2.compute.amazonaws.com:8090 in the Chrome/Firefox (Darknet should be compiled with OpenCV): 
../../../darknet detector train cfg/obj.data yolov4.cfg yolov4.conv.137 -dont_show -mjpeg_port 8090 -map

To process a list of images data/train.txt and save results of detection to result.txt use:
../../../darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights -dont_show -ext_output < data/train.txt > result.txt

for i in *.jpg; do rm "$i"; done


curl -o data/1532726.jpg http://35.179.44.166:9008/system/vehicle_images/1532726/file.jpg
curl -o data/1532720.jpg http://35.179.44.166:9008/system/vehicle_images/1532720/file.jpg
curl -o data/1532710.jpg http://35.179.44.166:9008/system/vehicle_images/1532710/file.jpg
curl -o data/1532676.jpg http://35.179.44.166:9008/system/vehicle_images/1532676/file.jpg

http://35.179.44.166:8888/cars_train.tar.gz
curl -o cfg/obj.names http://35.179.44.166:8888/yolo-cars-opencv/obj.names
curl -o cfg/yolo-cars.cfg http://35.179.44.166:8888/yolo-cars-opencv/yolo-cars-opencv.cfg
curl -o cars_train.tar.gz http://35.179.44.166:8888/cars_train.tar.gz
curl -o yolov4.conv.137 http://35.179.44.166:8888/yolov4.conv.137
curl -o data/cars.data http://35.179.44.166:8888/cars.data

data/obj.data
cars_train

darknet detector train data/cars.data cfg/yolo-cars.cfg yolov4.conv.137

http://35.179.44.166:8888/yolo-cars-opencv/yolo-cars-opencv_last.weights

!wget http://35.179.44.166:8888/yolo-cars-opencv/obj.names
!wget http://35.179.44.166:8888/yolo-cars-opencv/yolo-cars-opencv.cfg
!wget http://35.179.44.166:8888/yolo-cars-opencv/yolo-cars-opencv_last.weights

-rw-r--r-- 1 root root         4 Apr 27 06:48 obj.names
-rw-r--r-- 1 root root     12220 Apr 27 06:46 yolo-cars-opencv.cfg
-rw-r--r-- 1 root root 256015980 Apr 27 06:46 yolo-cars-opencv_1000.weights
-rw-r--r-- 1 root root 256015980 Apr 27 06:47 yolo-cars-opencv_2000.weights
-rw-r--r-- 1 root root 256015980 Apr 27 06:47 yolo-cars-opencv_final.weights
-rw-r--r-- 1 root root 256015980 Apr 27 06:47 yolo-cars-opencv_last.weights

anton adventure

/home/ubuntu/cars-dataset/shared/datasets/stanford-cars/cars_train
/root/build/darknet/build/darknet/x64
/opt/cars_train/

-rw-r--r-- 1 root root       625 Apr 27 05:05 coco.names
-rw-r--r-- 1 root root     12208 Apr 27 05:04 yolov4.cfg
-rw-r--r-- 1 root root 257717640 Apr 27 05:03 yolov4.weights

-rw-r--r-- 1 ubuntu ubuntu       625 Apr  8 10:07 coco.names
-rw-r--r-- 1 ubuntu ubuntu      8363 Apr 10 10:10 common.cfg
-rw-r--r-- 1 ubuntu ubuntu        31 Apr 10 09:59 common.names
-rw-r--r-- 1 ubuntu ubuntu 246391548 Apr 10 09:59 common_220000.weights
-rw-r--r-- 1 ubuntu ubuntu      8369 Apr 10 11:40 common_inference.cfg
-rw-r--r-- 1 root   root          98 Apr 26 15:06 obj.data
-rw-r--r-- 1 root   root           4 Apr 26 15:06 obj.names
-rw-r--r-- 1 ubuntu ubuntu     12195 Apr 26 15:05 yolo-obj.cfg
-rw-r--r-- 1 root   root   256015980 Apr 27 01:52 yolo-obj_1000.weights
-rw-r--r-- 1 root   root   256015980 Apr 27 01:52 yolo-obj_2000.weights
-rw-r--r-- 1 root   root   256015980 Apr 27 01:52 yolo-obj_final.weights
-rw-r--r-- 1 root   root   256015980 Apr 27 01:52 yolo-obj_last.weights
-rw-r--r-- 1 ubuntu ubuntu      2726 Apr 10 15:47 yolo.cfg
-rw-r--r-- 1 ubuntu ubuntu 203934260 Mar 27  2017 yolo.weights
-rw-r--r-- 1 ubuntu ubuntu      2726 Apr 10 15:47 yolov2.cfg
-rw-r--r-- 1 ubuntu ubuntu 203934260 Mar 25  2018 yolov2.weights
-rw-r--r-- 1 ubuntu ubuntu      8391 Apr 10 10:00 yolov3.cfg
-rw-r--r-- 1 ubuntu ubuntu 248007048 Mar 25  2018 yolov3.weights
-rw-r--r-- 1 ubuntu ubuntu      3106 Apr  8 10:07 yolov4-tiny-1cls.cfg
-rw-r--r-- 1 ubuntu ubuntu      3112 Apr  8 10:07 yolov4-tiny.cfg
-rw-rw-r-- 1 ubuntu ubuntu 170038676 Apr 26 12:59 yolov4.conv.137

0 0.5 0.5 0.10 0.25 centerX, centerY, width, height
represents an object of class 0, centered in the middle of the image, whose width is 10% of the image, and whose height is 25% of the image.

{
  "version": "3.6.10",
  "flags": {},
  "shapes": [
    {
      "label": "motocycle",
      "line_color": null,
      "fill_color": null,
      "points": [
        [
          0,
          21
        ],
        [
          564,
          639
        ]
      ],
      "shape_type": "rectangle"
    }
  ],
  "lineColor": [
    0,
    255,
    0,
    128
  ],
  "fillColor": [
    255,
    0,
    0,
    128
  ],
  "imagePath": "000000000073.jpg",
  "imageData": null,
  "imageHeight": 640,
  "imageWidth": 565
}

docker run --runtime=nvidia --name=server --net=host -p 8000:8000 inference_server 

curl -XPOST --silent --data-binary @images/1.jpg http://127.0.0.1:8000/api/classify | jq .

docker run -p 5000:5000 webapp-classify-mobilenet 

def convert(size, box):
    dw = 1./size[0]
    dh = 1./size[1]
    x = (box[0] + box[1])/2.0
    y = (box[2] + box[3])/2.0
    w = box[1] - box[0]
    h = box[3] - box[2]
    x = x*dw
    w = w*dw
    y = y*dh
    h = h*dh
    return (x,y,w,h)

## gpu-server
docker run --runtime=nvidia --name=server --net=host -p 8000:8000 inference_server 
curl -XPOST --silent --data-binary @images/1.jpg http://127.0.0.1:8000/api/classify | jq .

["caffe-server", "MobileNetV3.prototxt", "MobileNetV3.caffemodel", "imagenet_mean.binaryproto", "synset_words.txt"]

-rw-r--r-- 1 root root 20694617 Apr 24 14:45 MobileNetV3.caffemodel
-rw-r--r-- 1 root root    49613 Apr 24 14:45 MobileNetV3.prototxt
-rw-r--r-- 1 root root    49478 Apr 24 14:45 MobileNetV3_std_conv.prototxt

## yolo
https://github.com/ivder/Yolo_MultiClass_LabelTool
https://hub.docker.com/r/eric612/mobilenet-yolo/dockerfile

## vehicl detection
https://github.com/eric612/Vehicle-Detection

# dotnet build project
https://stackoverflow.com/questions/8264323/how-to-compile-a-visual-studio-c-sharp-project-with-mono

OpenVPN
https://gist.github.com/aioutecism/2638bb9eaf9ffc13348c
https://github.com/kylemanna/docker-openvpn
https://github.com/linuxserver/docker-openvpn-as
https://github.com/dperson/openvpn-client
https://blog.apify.com/how-to-make-headless-chrome-and-puppeteer-use-a-proxy-server-with-authentication-249a21a79212
https://github.com/open-mmlab/mmdetection
https://github.com/haugene/docker-transmission-openvpn/issues/271
https://networkfilter.blogspot.com/2018/07/home-vpn-gateway-with-docker-and.html#protonvpn
https://github.com/iam4x/bobarr/blob/master/docker-compose.yml
https://github.com/chrisx8/docker-openvpn-alpine
https://github.com/zzeneg/private-server-docker/blob/master/docker-compose.yml#L103
https://github.com/indicolite/toolkit/blob/master/mac/docker-for-mac/docker-for-mac-openvpn/docker-compose.yml

image.0 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/Tm-OI_L-QWKWF5rjQmY3Xg.jpg
image.1 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/XohfQZ5VTnCRLBsofJXKnA.jpg
image.2 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/1ik2ydZ1Tbe1qgYlj9pANw.jpg
image.3 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/3lptrZRYTpKVCEQqYkUPZQ.jpg
image.4 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/mCxNSfNnTS6pwFw6pI6y8w.jpg
image.5 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/-M2HPkaxQV-tNz0M9ovcQg.jpg
image.6 : https://d1zgdcrdir5wgt.cloudfront.net/media/vehicle/images/M3WbACJ4Q8i5cIh-qcu2Og.jpg
aggregateRating.alternateName : Black Pony
aggregateRating.bestRating : 5.000000
aggregateRating.name : 2017 Ford Mustang
aggregateRating.ratingCount : 34.000000
aggregateRating.ratingValue : 5.000000
aggregateRating.worstRating : 0.000000
brand : Ford
https://turo.com/sitemap-index.xml.gz

8421 classiccars pid
11312 classiccars.com

https://github.com/zet4/alpine-tor

https://github.com/GabrielDeml/Yolo_mark_in_docker/blob/master/run.sh#L4
-e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix

rp, err := proxy.RoundRobinProxySwitcher("http://51.91.21.67:8118")
if err != nil {
        log.Fatal(err)
}
c.SetProxyFunc(rp)

curl --proxy localhost:8119 https://www.classicdriver.com/en/sitemap.xml
curl --proxy localhost:5566 https://www.classicdriver.com/en/sitemap.xml
curl -x socks5h://localhost:1080 https://httpbin.org/ip

-o sitemap.xml https://www.classicdriver.com/en/sitemap.xml

curl -x socks5h://localhost:1080 -o sitemap_1.xml https://www.classicdriver.com/en/sitemap.xml?page=1 && \
curl -x socks5h://localhost:1080 -o sitemap_3.xml https://www.classicdriver.com/en/sitemap.xml?page=2 && \
curl -x socks5h://localhost:1080 -o sitemap_3.xml https://www.classicdriver.com/en/sitemap.xml?page=3 && \
curl -x socks5h://localhost:1080 -o sitemap_4.xml https://www.classicdriver.com/en/sitemap.xml?page=4 && \
curl -x socks5h://localhost:1080 -o sitemap_5.xml https://www.classicdriver.com/en/sitemap.xml?page=5 && \
curl -x socks5h://localhost:1080 -o sitemap_6.xml https://www.classicdriver.com/en/sitemap.xml?page=6 && \
curl -x socks5h://localhost:1080 -o sitemap_7.xml https://www.classicdriver.com/en/sitemap.xml?page=7 && \
curl -x socks5h://localhost:1080 -o sitemap_8.xml https://www.classicdriver.com/en/sitemap.xml?page=8 && \
curl -x socks5h://localhost:1080 -o sitemap_9.xml https://www.classicdriver.com/en/sitemap.xml?page=9 && \
curl -x socks5h://localhost:1080 -o sitemap_10.xml https://www.classicdriver.com/en/sitemap.xml?page=10 && \
curl -x socks5h://localhost:1080 -o sitemap_11.xml https://www.classicdriver.com/en/sitemap.xml?page=11 && \
curl -x socks5h://localhost:1080 -o sitemap_12.xml https://www.classicdriver.com/en/sitemap.xml?page=12 && \
curl -x socks5h://localhost:1080 -o sitemap_13.xml https://www.classicdriver.com/en/sitemap.xml?page=13 && \
curl -x socks5h://localhost:1080 -o sitemap_14.xml https://www.classicdriver.com/en/sitemap.xml?page=14

curl -x socks5h://localhost:1080 -o sitemap.xml https://www.classicdriver.com/en/sitemap.xml


curl --socks5 localhost:5566 -o test3.html https://motorcycles.autotrader.com/motorcycles/2019/bmw/c400x/200865678
curl --proxy localhost:8118 http://httpbin.org/ip

curl --proxy localhost:8119 -o test2.html https://motorcycles.autotrader.com/motorcycles/2019/bmw/c400x/200865678
curl --proxy localhost:5566 -o test2.html https://motorcycles.autotrader.com/motorcycles/2019/bmw/c400x/200865678

curl --proxy localhost:8118 https://www.carvana.com
curl --proxy localhost:8118 https://www.google.com
curl --proxy tor-privoxy:8118 https://www.google.com
curl -x socks5h://localhost:1080 https://www.google.com
curl -x socks5h://protonvpn:1080 https://www.youtube.com

{
  "default-runtime": "nvidia",
  "runtimes": {
    "nvidia": {
      "path": "/usr/bin/nvidia-container-runtime",
      "runtimeArgs": []
    }
  }
}

export LDFLAGS="${LDFLAGS} -L/usr/local/opt/openblas/lib"
export CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/openblas/include"

export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:/usr/local/opt/openblas/lib/pkgconfig"

git clone -b fix-build https://github.com/mattn/go-tensorflow-realtime-object-detection

export CFLAGS="-I/usr/local/lib/python3.7/site-packages/numpy/core/include $CFLAGS"

darknet_1      | runtime.throw(0xabcbeb, 0x2a)
darknet_1      |  /usr/local/go/src/runtime/panic.go:1114 +0x72
darknet_1      | runtime.sigpanic()
darknet_1      |  /usr/local/go/src/runtime/signal_unix.go:679 +0x46a
darknet_1      |
darknet_1      | goroutine 11 [syscall]:
darknet_1      | runtime.cgocall(0x977750, 0xc0000eb2e0, 0xc0002ae040)
darknet_1      |  /usr/local/go/src/runtime/cgocall.go:133 +0x5b fp=0xc0000eb2b0 sp=0xc0000eb278 pc=0x4057fb
darknet_1      | github.com/LdDl/go-darknet._Cfunc_perform_network_detect(0x1674660, 0xc0002ae040, 0x3e80000000000005, 0x3ee666663f000000, 0xc000000000, 0x0, 0x0)
darknet_1      |  _cgo_gotypes.go:810 +0x4d fp=0xc0000eb2e0 sp=0xc0000eb2b0 pc=0x96f65d
darknet_1      | github.com/LdDl/go-darknet.(*YOLONetwork).Detect.func1(0xf965a0, 0xc0002ae030, 0x0, 0x0)
darknet_1      |  /go/src/github.com/LdDl/go-darknet/network.go:72 +0x117 fp=0xc0000eb350 sp=0xc0000eb2e0 pc=0x971927
darknet_1      | github.com/LdDl/go-darknet.(*YOLONetwork).Detect(0xf965a0, 0xc0002ae030, 0x0, 0x0, 0x0)
darknet_1      |  /go/src/github.com/LdDl/go-darknet/network.go:72 +0xb9 fp=0xc0000eb470 sp=0xc0000eb350 pc=0x970f69
darknet_1      | main.server.func3(0xc0004c9260)

/usr/local/share/android-sdk

find . -maxdepth 1 -type f -name "*.jpg" | head -5702 | xargs cp -t /home/ubuntu/cars-dataset/shared/datasets/yolo-cars/negative/

find . -maxdepth 1 -type f -name "*.jpg" | head -5702 | xargs cp -t /home/ubuntu/cars-dataset/shared/datasets/yolo-cars/negative/
find . -maxdepth 1 -type f -name "*.jpg" | wc -l

369 negative cars
5803 cars
5434

https://stackoverflow.com/questions/37458287/how-to-run-a-cron-job-inside-a-docker-container

cd plugins/carvana-kaggle && GOOS=linux GOARCH=amd64 go build -buildmode=plugin -o ../../release/cars-dataset-carvana-kaggle.so && cd ../.. && \
cd plugins/stanford-cars && GOOS=linux GOARCH=amd64 go build -buildmode=plugin -o ../../release/cars-dataset-stanford-cars.so && cd ../..

369 negative cars
11606 cars from stanford-cars

57431 

~/cars-dataset/shared/datasets/5classes/train2017_stanford

## kafka + go 
https://github.com/parinpan/sturectory/blob/master/docker-compose.yml
https://github.com/MAGE001/sample-crawler

## kafka + gocolly
https://github.com/Veerse/reezocar_test/blob/master/producer/main.go
https://github.com/Veerse/reezocar_test/blob/master/consumer/main.go
https://github.com/alexmorten/instascraper/blob/master/scraper/scraper.go
https://github.com/velann21/crawler/blob/master/main.go
https://github.com/velann21/crawler/blob/master/pkg/service/crawl_service/amazon_crwl_service.go
https://github.com/codeuniversity/smag-mvp/blob/master/insta/scraper/user/scraper.go
https://github.com/mouminoux/kafka-doc/blob/master/main.go
https://github.com/wlcn/yq-colly/blob/master/taihe/taihe_kafka.go#L234


convert them
cd ~/cars-dataset/tools/python/labelme2yolo && docker build -t labelme2yolo .
cd ~/cars-dataset/shared/datasets

nano ~/cars-dataset/tools/python/labelme2yolo/labelme2yolo.py

docker run --rm -ti -v `pwd`/stanford_train_bbfixed:/opt/data \
-v ~/cars-dataset/tools/python/labelme2yolo/labelme2yolo.py:/opt/labelme2yolo.py \
labelme2yolo

# Campaigns sender, runs each minute.
* * * * * /usr/bin/php -q /var/www/web/apps/console/console.php send-campaigns >/dev/null 2>&1

# Transactional email sender, runs once at 2 minutes.
*/2 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php send-transactional-emails >/dev/null 2>&1

# Bounce handler, runs once at 10 minutes.
*/10 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php bounce-handler >/dev/null 2>&1

# Feedback loop handler, runs once at 20 minutes.
*/20 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php feedback-loop-handler >/dev/null 2>&1

# Delivery/Bounce processor, runs once at 3 minutes.
*/3 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php process-delivery-and-bounce-log >/dev/null 2>&1

# Various tasks, runs each hour.
0 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php hourly >/dev/null 2>&1

# Daily cleaner, runs once a day.
0 0 * * * /usr/bin/php -q /var/www/web/apps/console/console.php daily >/dev/null 2>&1

# copy the current cron into a new file
crontab -l > mwcron

# add the new entries into the file
echo "* * * * * /usr/bin/php -q /var/www/web/apps/console/console.php send-campaigns >/dev/null 2>&1" >> mwcron
echo "*/2 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php send-transactional-emails >/dev/null 2>&1" >> mwcron
echo "*/10 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php bounce-handler >/dev/null 2>&1" >> mwcron
echo "*/20 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php feedback-loop-handler >/dev/null 2>&1" >> mwcron
echo "*/3 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php process-delivery-and-bounce-log >/dev/null 2>&1" >> mwcron
echo "0 * * * * /usr/bin/php -q /var/www/web/apps/console/console.php hourly >/dev/null 2>&1" >> mwcron
echo "0 0 * * * /usr/bin/php -q /var/www/web/apps/console/console.php daily >/dev/null 2>&1" >> mwcron

# install the new cron
crontab mwcron

# remove the crontab file since it has been installed and we don't use it anymore.
rm mwcron